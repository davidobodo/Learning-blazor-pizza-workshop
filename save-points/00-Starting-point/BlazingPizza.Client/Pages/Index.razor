@page "/"
@inject HttpClient HttpClient

@if (showingConfigureDialog)
{
    <ConfigurePizzaDialog 
                          Pizza="configuringPizza" 
                          OnCancel="CancelConfigurePizzaDialog"
                          OnConfirm="ConfirmConfigurePizzaDialog"/>
}

<div class="main">
    <ul class="pizza-cards">
        @if(specials != null)
        {
            @foreach(var special in specials)
            {
                <li @onclick="@(() => ShowConfigurePizzaDialog(special))" style="background-image: url('@special.ImageUrl')">
                    <div class="pizza-info">
                        <span class="title">
                            @special.Name
                        </span>
                            @special.Description
                        <span class="price">
                            @special.GetFormattedBasePrice()
                        </span>
                    </div>
                </li>
            }
        }
    </ul>
</div>


@code{
    private List<PizzaSpecial> specials;

    Pizza configuringPizza;

    bool showingConfigureDialog;

    Order order = new Order();

    void ShowConfigurePizzaDialog(PizzaSpecial special)
    {
        configuringPizza = new Pizza()
        {
            Special = special,
            SpecialId = special.Id,
            Size = Pizza.DefaultSize,
            Toppings = new List<PizzaTopping>(),
        };

        showingConfigureDialog = true;
    }

    protected async override Task OnInitializedAsync()
    {
        specials = await HttpClient.GetJsonAsync<List<PizzaSpecial>>("specials");
    }

    void CancelConfigurePizzaDialog()
    {
        configuringPizza = null;
        showingConfigureDialog = false;
    }

    void ConfirmConfigurePizzaDialog()
    {
        order.Pizzas.Add(configuringPizza);
        configuringPizza = null;

        showingConfigureDialog = false;
    }
}